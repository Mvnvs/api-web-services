{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\Downloads\\\\API_projet\\\\API_Project\\\\frontend\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLazyQuery, gql } from '@apollo/client';\nimport { fetchEvents, deleteEvent, attendEvent, unattendEvent, createEvent, updateEvent } from '../api';\nimport Event from './Event';\nimport EventForm from './EventForm';\nimport './EventList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_EVENTS = gql`\n  query GetEvents($title: String) {\n    events(title: $title) {\n      _id\n      title\n      description\n      date\n      createdBy {\n        _id\n        name\n      }\n      attendees {\n        _id\n      }\n      maxAttendees\n    }\n  }\n`;\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [getEvents, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_EVENTS);\n  useEffect(() => {\n    const fetchInitialEvents = async () => {\n      try {\n        const events = await fetchEvents();\n        console.log('Fetched events:', events);\n        setEvents(events);\n      } catch (err) {\n        console.error('Error fetching initial events:', err);\n      }\n    };\n    fetchInitialEvents();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      console.log('GraphQL Response:', data);\n      setEvents(data.events);\n    }\n  }, [data]);\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    getEvents({\n      variables: {\n        title: filter\n      }\n    });\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteEvent(id);\n      setEvents(events.filter(event => event._id !== id));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n  const handleAttend = async id => {\n    try {\n      const updatedEvent = await attendEvent(id);\n      setEvents(events.map(event => event._id === id ? updatedEvent : event));\n    } catch (error) {\n      console.error('Error attending event:', error);\n    }\n  };\n  const handleUnattend = async id => {\n    try {\n      const updatedEvent = await unattendEvent(id);\n      setEvents(events.map(event => event._id === id ? updatedEvent : event));\n    } catch (error) {\n      console.error('Error unattending event:', error);\n    }\n  };\n  const handleEventCreated = async newEvent => {\n    try {\n      const createdEvent = await createEvent(newEvent);\n      setEvents([...events, createdEvent]);\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n  const handleEventUpdated = async (id, updatedEvent) => {\n    try {\n      const event = await updateEvent(id, updatedEvent);\n      setEvents(events.map(e => e._id === id ? event : e));\n    } catch (error) {\n      console.error('Error updating event:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, this);\n  if (error) {\n    console.error('GraphQL Error:', error);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by title\",\n        value: filter,\n        onChange: handleFilterChange,\n        className: \"filter-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      onEventCreated: handleEventCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n      event: event,\n      onDelete: handleDelete,\n      onAttend: handleAttend,\n      onUnattend: handleUnattend,\n      onUpdate: handleEventUpdated // Pass the update handler\n    }, event._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"aGZCncurAQIiXPsMtkA0AbC6N8k=\", false, function () {\n  return [useLazyQuery];\n});\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useState","useEffect","useLazyQuery","gql","fetchEvents","deleteEvent","attendEvent","unattendEvent","createEvent","updateEvent","Event","EventForm","jsxDEV","_jsxDEV","GET_EVENTS","EventList","_s","events","setEvents","filter","setFilter","getEvents","loading","error","data","fetchInitialEvents","console","log","err","handleFilterChange","e","target","value","handleSearch","preventDefault","variables","title","handleDelete","id","event","_id","handleAttend","updatedEvent","map","handleUnattend","handleEventCreated","newEvent","createdEvent","handleEventUpdated","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onSubmit","type","placeholder","onChange","onEventCreated","onDelete","onAttend","onUnattend","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/emman/Downloads/API_projet/API_Project/frontend/src/components/EventList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLazyQuery, gql } from '@apollo/client';\nimport { fetchEvents, deleteEvent, attendEvent, unattendEvent, createEvent, updateEvent } from '../api';\nimport Event from './Event';\nimport EventForm from './EventForm';\nimport './EventList.css';\n\nconst GET_EVENTS = gql`\n  query GetEvents($title: String) {\n    events(title: $title) {\n      _id\n      title\n      description\n      date\n      createdBy {\n        _id\n        name\n      }\n      attendees {\n        _id\n      }\n      maxAttendees\n    }\n  }\n`;\n\nconst EventList = () => {\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const [getEvents, { loading, error, data }] = useLazyQuery(GET_EVENTS);\n\n  useEffect(() => {\n    const fetchInitialEvents = async () => {\n      try {\n        const events = await fetchEvents();\n        console.log('Fetched events:', events);\n        setEvents(events);\n      } catch (err) {\n        console.error('Error fetching initial events:', err);\n      }\n    };\n\n    fetchInitialEvents();\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      console.log('GraphQL Response:', data);\n      setEvents(data.events);\n    }\n  }, [data]);\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    getEvents({ variables: { title: filter } });\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await deleteEvent(id);\n      setEvents(events.filter(event => event._id !== id));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  const handleAttend = async (id) => {\n    try {\n      const updatedEvent = await attendEvent(id);\n      setEvents(events.map(event => (event._id === id ? updatedEvent : event)));\n    } catch (error) {\n      console.error('Error attending event:', error);\n    }\n  };\n\n  const handleUnattend = async (id) => {\n    try {\n      const updatedEvent = await unattendEvent(id);\n      setEvents(events.map(event => (event._id === id ? updatedEvent : event)));\n    } catch (error) {\n      console.error('Error unattending event:', error);\n    }\n  };\n\n  const handleEventCreated = async (newEvent) => {\n    try {\n      const createdEvent = await createEvent(newEvent);\n      setEvents([...events, createdEvent]);\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n\n  const handleEventUpdated = async (id, updatedEvent) => {\n    try {\n      const event = await updateEvent(id, updatedEvent);\n      setEvents(events.map(e => (e._id === id ? event : e)));\n    } catch (error) {\n      console.error('Error updating event:', error);\n    }\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error('GraphQL Error:', error);\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div className=\"event-list\">\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Filter by title\"\n          value={filter}\n          onChange={handleFilterChange}\n          className=\"filter-input\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <EventForm onEventCreated={handleEventCreated} />\n      {events.map(event => (\n        <Event\n          key={event._id}\n          event={event}\n          onDelete={handleDelete}\n          onAttend={handleAttend}\n          onUnattend={handleUnattend}\n          onUpdate={handleEventUpdated} // Pass the update handler\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default EventList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}