{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\Downloads\\\\API Project copie\\\\API Project copie\\\\frontend\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport EventForm from './EventForm';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Adapter l'URL et le port en fonction de votre serveur WebSocket\n\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [eventToUpdate, setEventToUpdate] = useState(null);\n  useEffect(() => {\n    // Écouter l'événement 'eventCreated' pour recevoir de nouveaux événements créés\n    socket.on('eventCreated', handleEventCreated);\n\n    // Écouter l'événement 'eventUpdated' pour recevoir des événements mis à jour\n    socket.on('eventUpdated', handleEventUpdated);\n\n    // Écouter l'événement 'eventDeleted' pour recevoir des événements supprimés\n    socket.on('eventDeleted', handleEventDeleted);\n    return () => {\n      // Désabonner les écouteurs d'événements lors du démontage du composant\n      socket.off('eventCreated', handleEventCreated);\n      socket.off('eventUpdated', handleEventUpdated);\n      socket.off('eventDeleted', handleEventDeleted);\n    };\n  }, []);\n  const handleEventCreated = newEvent => {\n    setEvents(prevEvents => [...prevEvents, newEvent]);\n  };\n  const handleEventUpdated = updatedEvent => {\n    setEvents(prevEvents => prevEvents.map(event => event._id === updatedEvent._id ? updatedEvent : event));\n    setEventToUpdate(null); // Réinitialiser l'événement en cours de mise à jour\n  };\n  const handleEventDeleted = deletedEventId => {\n    setEvents(prevEvents => prevEvents.filter(event => event._id !== deletedEventId));\n  };\n  const handleUpdateEvent = eventId => {\n    const eventToUpdate = events.find(event => event._id === eventId);\n    setEventToUpdate(eventToUpdate);\n  };\n  const handleDeleteEvent = eventId => {\n    socket.emit('deleteEvent', eventId);\n  };\n  const handleFormSubmit = formData => {\n    if (eventToUpdate) {\n      socket.emit('updateEvent', {\n        ...formData,\n        id: eventToUpdate._id\n      });\n    } else {\n      socket.emit('createEvent', formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EventForm, {\n      onFormSubmit: handleFormSubmit,\n      eventToUpdate: eventToUpdate,\n      onCancelUpdate: () => setEventToUpdate(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n      event: event,\n      onUpdate: handleUpdateEvent,\n      onDelete: handleDeleteEvent\n    }, event._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"ivm+7HGByBnBT1O1EFqf9x+GRxI=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useEffect","useState","io","EventForm","Event","jsxDEV","_jsxDEV","socket","EventList","_s","events","setEvents","eventToUpdate","setEventToUpdate","on","handleEventCreated","handleEventUpdated","handleEventDeleted","off","newEvent","prevEvents","updatedEvent","map","event","_id","deletedEventId","filter","handleUpdateEvent","eventId","find","handleDeleteEvent","emit","handleFormSubmit","formData","id","children","onFormSubmit","onCancelUpdate","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/emman/Downloads/API Project copie/API Project copie/frontend/src/components/EventList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport EventForm from './EventForm';\nimport Event from './Event';\n\nconst socket = io('http://localhost:3001'); // Adapter l'URL et le port en fonction de votre serveur WebSocket\n\nconst EventList = () => {\n  const [events, setEvents] = useState([]);\n  const [eventToUpdate, setEventToUpdate] = useState(null);\n\n  useEffect(() => {\n    // Écouter l'événement 'eventCreated' pour recevoir de nouveaux événements créés\n    socket.on('eventCreated', handleEventCreated);\n\n    // Écouter l'événement 'eventUpdated' pour recevoir des événements mis à jour\n    socket.on('eventUpdated', handleEventUpdated);\n\n    // Écouter l'événement 'eventDeleted' pour recevoir des événements supprimés\n    socket.on('eventDeleted', handleEventDeleted);\n\n    return () => {\n      // Désabonner les écouteurs d'événements lors du démontage du composant\n      socket.off('eventCreated', handleEventCreated);\n      socket.off('eventUpdated', handleEventUpdated);\n      socket.off('eventDeleted', handleEventDeleted);\n    };\n  }, []);\n\n  const handleEventCreated = (newEvent) => {\n    setEvents(prevEvents => [...prevEvents, newEvent]);\n  };\n\n  const handleEventUpdated = (updatedEvent) => {\n    setEvents(prevEvents =>\n      prevEvents.map(event => (event._id === updatedEvent._id ? updatedEvent : event))\n    );\n    setEventToUpdate(null); // Réinitialiser l'événement en cours de mise à jour\n  };\n\n  const handleEventDeleted = (deletedEventId) => {\n    setEvents(prevEvents =>\n      prevEvents.filter(event => event._id !== deletedEventId)\n    );\n  };\n\n  const handleUpdateEvent = (eventId) => {\n    const eventToUpdate = events.find(event => event._id === eventId);\n    setEventToUpdate(eventToUpdate);\n  };\n\n  const handleDeleteEvent = (eventId) => {\n    socket.emit('deleteEvent', eventId);\n  };\n\n  const handleFormSubmit = (formData) => {\n    if (eventToUpdate) {\n      socket.emit('updateEvent', { ...formData, id: eventToUpdate._id });\n    } else {\n      socket.emit('createEvent', formData);\n    }\n  };\n\n  return (\n    <div>\n      <EventForm\n        onFormSubmit={handleFormSubmit}\n        eventToUpdate={eventToUpdate}\n        onCancelUpdate={() => setEventToUpdate(null)}\n      />\n      {events.map(event => (\n        <Event\n          key={event._id}\n          event={event}\n          onUpdate={handleUpdateEvent}\n          onDelete={handleDeleteEvent}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default EventList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}