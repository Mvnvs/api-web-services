{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\Downloads\\\\API Project copie\\\\API Project copie\\\\frontend\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchEvents, createEvent, updateEvent, deleteEvent, attendEvent, unattendEvent } from '../api';\nimport EventForm from './EventForm';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [eventToUpdate, setEventToUpdate] = useState(null); // State to track event being updated\n\n  useEffect(() => {\n    // Fetch events on component mount\n    fetchEvents().then(data => {\n      setEvents(data);\n    });\n  }, []);\n  const handleEventCreated = async newEvent => {\n    try {\n      // Logic to add new event to state\n      setEvents(prevEvents => [...prevEvents, newEvent]);\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n  const handleUpdateEvent = async updatedEvent => {\n    try {\n      // Logic to update event in state\n      setEvents(prevEvents => prevEvents.map(event => event._id === updatedEvent._id ? updatedEvent : event));\n      setEventToUpdate(null); // Clear the eventToUpdate state\n    } catch (error) {\n      console.error('Error updating event:', error);\n    }\n  };\n  const handleDelete = async eventId => {\n    try {\n      // Logic to delete event from state\n      await deleteEvent(eventId);\n      setEvents(prevEvents => prevEvents.filter(event => event._id !== eventId));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n  const handleAttend = async eventId => {\n    try {\n      // Logic to attend event\n      const updatedEvent = await attendEvent(eventId);\n      setEvents(prevEvents => prevEvents.map(event => event._id === updatedEvent._id ? updatedEvent : event));\n    } catch (error) {\n      console.error('Error attending event:', error);\n    }\n  };\n  const handleUnattend = async eventId => {\n    try {\n      // Logic to unattend event\n      const updatedEvent = await unattendEvent(eventId);\n      setEvents(prevEvents => prevEvents.map(event => event._id === updatedEvent._id ? updatedEvent : event));\n    } catch (error) {\n      console.error('Error unattending event:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EventForm, {\n      onEventCreated: handleEventCreated,\n      eventToUpdate: eventToUpdate,\n      onUpdateEvent: handleUpdateEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n      event: event,\n      onDelete: handleDelete,\n      onAttend: handleAttend,\n      onUnattend: handleUnattend,\n      onUpdate: () => setEventToUpdate(event) // Set eventToUpdate state for editing\n    }, event._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"ivm+7HGByBnBT1O1EFqf9x+GRxI=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useState","useEffect","fetchEvents","createEvent","updateEvent","deleteEvent","attendEvent","unattendEvent","EventForm","Event","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","eventToUpdate","setEventToUpdate","then","data","handleEventCreated","newEvent","prevEvents","error","console","handleUpdateEvent","updatedEvent","map","event","_id","handleDelete","eventId","filter","handleAttend","handleUnattend","children","onEventCreated","onUpdateEvent","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onAttend","onUnattend","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/emman/Downloads/API Project copie/API Project copie/frontend/src/components/EventList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchEvents, createEvent, updateEvent, deleteEvent, attendEvent, unattendEvent } from '../api';\nimport EventForm from './EventForm';\nimport Event from './Event';\n\nconst EventList = () => {\n  const [events, setEvents] = useState([]);\n  const [eventToUpdate, setEventToUpdate] = useState(null); // State to track event being updated\n\n  useEffect(() => {\n    // Fetch events on component mount\n    fetchEvents().then(data => {\n      setEvents(data);\n    });\n  }, []);\n\n  const handleEventCreated = async (newEvent) => {\n    try {\n      // Logic to add new event to state\n      setEvents(prevEvents => [...prevEvents, newEvent]);\n    } catch (error) {\n      console.error('Error creating event:', error);\n    }\n  };\n\n  const handleUpdateEvent = async (updatedEvent) => {\n    try {\n      // Logic to update event in state\n      setEvents(prevEvents => prevEvents.map(event =>\n        event._id === updatedEvent._id ? updatedEvent : event\n      ));\n      setEventToUpdate(null); // Clear the eventToUpdate state\n    } catch (error) {\n      console.error('Error updating event:', error);\n    }\n  };\n\n  const handleDelete = async (eventId) => {\n    try {\n      // Logic to delete event from state\n      await deleteEvent(eventId);\n      setEvents(prevEvents => prevEvents.filter(event => event._id !== eventId));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  const handleAttend = async (eventId) => {\n    try {\n      // Logic to attend event\n      const updatedEvent = await attendEvent(eventId);\n      setEvents(prevEvents => prevEvents.map(event =>\n        event._id === updatedEvent._id ? updatedEvent : event\n      ));\n    } catch (error) {\n      console.error('Error attending event:', error);\n    }\n  };\n\n  const handleUnattend = async (eventId) => {\n    try {\n      // Logic to unattend event\n      const updatedEvent = await unattendEvent(eventId);\n      setEvents(prevEvents => prevEvents.map(event =>\n        event._id === updatedEvent._id ? updatedEvent : event\n      ));\n    } catch (error) {\n      console.error('Error unattending event:', error);\n    }\n  };\n\n  return (\n    <div>\n      {/* EventForm for creating or updating events */}\n      <EventForm onEventCreated={handleEventCreated} eventToUpdate={eventToUpdate} onUpdateEvent={handleUpdateEvent} />\n\n      {/* Render list of events */}\n      {events.map(event => (\n        <Event\n          key={event._id}\n          event={event}\n          onDelete={handleDelete}\n          onAttend={handleAttend}\n          onUnattend={handleUnattend}\n          onUpdate={() => setEventToUpdate(event)} // Set eventToUpdate state for editing\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default EventList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}